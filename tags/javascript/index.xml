<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on OmerF</title><link>https://omerfarukdemirel.com.tr/tags/javascript/</link><description>Recent content in javascript on OmerF</description><generator>Hugo -- gohugo.io</generator><language>tr-TR</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. @omerfdmrl</copyright><lastBuildDate>Tue, 21 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://omerfarukdemirel.com.tr/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>NodeJs Eklenti Sistemi Kodlama</title><link>https://omerfarukdemirel.com.tr/post/nodejs-eklenti-sistemi-kodlama/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://omerfarukdemirel.com.tr/post/nodejs-eklenti-sistemi-kodlama/</guid><description>Eklenti Nedir? JavaScript ile proje geliştirirken projelerin başkaları tarafından kolayca düzenlenebilmesini, geliştirilebilmesini isteyebilirsiniz. Örneğin Quill.js &amp;rsquo; i bilmeyenimiz yoktur; kendisi başarılı bir WYSIWYG editörüdür. Bu kütüphaneyi kullanırken eğer içine özellik eklemek istiyorsak kütüphanenin kendi kodlarını düzenlemeden, bize sağladığı sınırlar içerisinde istediğimiz eklentiyi kodlayabiliriz ve çok daha kullanışlı bir hale getirebiliriz. Kaldı ki Github&amp;rsquo;da geliştiriciler tarafından kodlanmış bir sürü eklenti mevcuttur.
Not: Anlaşılmadıysa tarayıcınızdaki eklentileri düşünebilirsiniz. Normalde olmayan harika özellikleri tarayıcınıza eklemeyi sağlar.</description></item><item><title>Javascript'de Class'lar Gerçek Midir?</title><link>https://omerfarukdemirel.com.tr/post/javascriptde-classlar-gercek-midir/</link><pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate><guid>https://omerfarukdemirel.com.tr/post/javascriptde-classlar-gercek-midir/</guid><description>Class Nedir? JavaScript prototip tabanlı bir dildir ve javascript&amp;rsquo;teki her nesnenin, nesne özelliklerini ve yöntemlerini genişletmek için kullanılabilecek [[Prototype]] adlı gizli bir dahili özelliği vardır.
JavaScript geliştiricileri, object-orianted design pattern (nesne yönelimli bir tasarım modeli) taklit etmek için constructor fonksiyonlarını kullandılar.
ES6 yani EcmaScript 2015 ile birlikte Class&amp;rsquo;ları JavaScript&amp;rsquo;de kullanabilir hale geldik. Aslında zaten JavaScript&amp;rsquo;de var olan Class yapısını getirme sebeplerinden başlıcası diğer dillerin çoğunun sahip olması ve temiz, düzenli kod yazılmasını mümkün kılması.</description></item></channel></rss>